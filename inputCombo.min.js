function InputCombo(a) { if (a) { this.config = { levelArr: [] }; this.config.id = a.el || document.body; this.config.level = a.level || 6; this.config.levelUpNum = a.levelUpNum || 30; this.config.greatNum = a.greatNum || 10; this.config.greatArr = a.greatArr || ["Super!", "Radical!", "Fantastic!", "Great!", "OMG", "Whoah!", ":O", "Nice!", "Splendid!", "Wild!", "Grand!", "Impressive!", "Stupendous!", "Extreme!", "Awesome!"]; this.config.colorful = a.colorful || true; this.config.shake = a.shake || true } else { this.config = { id: document.body, level: 6, levelArr: [], levelUpNum: 30, greatNum: 10, greatArr: ["Super!", "Radical!", "Fantastic!", "Great!", "OMG", "Whoah!", ":O", "Nice!", "Splendid!", "Wild!", "Grand!", "Impressive!", "Stupendous!", "Extreme!", "Awesome!"], openColor: true, shake: true } } } InputCombo.prototype = { $: function (a) { if (typeof a == "string") { return document.getElementById(a) } return a }, init: function () { this.config.inputNum = 0; this.config.great = 0; this.config.nowLevel = 0; this.domWrap = this.$(this.config.id); var b = "<div class='streak-container lv1'><div class='current'>Combo</div><div class='counter'>0</div><div class='bar'></div><div class='exclamations'></div></div>"; console.log("this.domWrap", this.domWrap); this.domWrap.innerHTML += b; this.$num = this.domWrap.getElementsByClassName("counter")[0]; this.$bar = this.domWrap.getElementsByClassName("bar")[0]; this.$exclamations = this.domWrap.getElementsByClassName("exclamations")[0]; this.$exclamation = this.domWrap.getElementsByClassName("exclamation"); this.$streak = this.domWrap.getElementsByClassName("streak-container")[0]; for (var a = 1; a <= this.config.level; a++) { this.config.levelArr.push("lv" + a) } if (POWERMODE) { POWERMODE.colorful = this.config.colorful; POWERMODE.shake = this.config.shake; document.body.addEventListener("input", POWERMODE) } this.start(); return this }, start: function () { var a = this; a.$num.addEventListener("webkitAnimationEnd", function () { this.className = this.className.replace(" animate", "") }, false); a.$bar.addEventListener("webkitAnimationEnd", function () { this.className = this.className.replace(" animate", ""); a.config.inputNum = 0; a.config.great = 0; a.config.nowLevel = 0; a.$num.innerText = a.config.inputNum; a.$streak.className = "streak-container " + a.config.levelArr[0] }, false); a.$exclamations.addEventListener("webkitAnimationEnd", function (c) { var c = c || window.event; var b = c.target || c.srcElement; if (b.nodeName.toLocaleLowerCase() == "span") { b.remove() } }, false); this.domWrap.addEventListener("keypress", function () { a.combo() }, false) }, combo: function () { var b = this; this.config.inputNum++; b.$num.innerText = this.config.inputNum; if (b.$num.className.indexOf("animate") != -1) { b.$num.className += " animate" } b.$bar.className = b.$bar.className.replace(" animate", ""); setTimeout(function () { if (b.$bar.className.indexOf("animate") == -1) { b.$bar.className += " animate" } }, 10); if (this.config.inputNum % this.config.greatNum == 0) { var a = document.createElement("span"); a.className = "exclamation"; a.innerText = this.config.greatArr[this.config.great]; b.$exclamations.appendChild(a); this.config.great++; if (this.config.great > this.config.greatArr.length - 1) { this.config.great = 0 } } if (this.config.inputNum % this.config.levelUpNum == 0) { this.levelUp() } }, levelUp: function () { if (this.config.nowLevel < this.config.levelArr.length - 1) { this.config.nowLevel++ } var a = this.$streak.className; this.config.levelArr.forEach(function (b) { a = a.replace(b, "") }); this.$streak.className = a + this.config.levelArr[this.config.nowLevel] } };